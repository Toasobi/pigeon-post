spring.application.name=pigeon-post-web

pigeon.database.ip=43.138.199.12
pigeon.database.port=13306
pigeon.database.username=root
pigeon.database.password=123456

pigeon.kafka.ip=117.50.186.19
pigeon.kafka.port=9092

pigeon.redis.ip=43.138.199.12
pigeon.redis.port=6379
pigeon.redis.password=123456

##################### database properties #####################
# notice:mysql version 5.7x !!!
spring.datasource.url=jdbc:mysql://${pigeon.database.ip}:${pigeon.database.port}/pigeon?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false&zeroDateTimeBehavior=convertToNull 
spring.datasource.username=${pigeon.database.username}
spring.datasource.password=${pigeon.database.password}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

pigeon.mq.pipeline=kafka
pigeon.business.topic.name=pigeonBusiness
pigeon.business.recall.topic.name=pigeonRecall
pigeon.business.recall.group.name=recallGroupId
pigeon.business.log.topic.name=pigeonTraceLog
### kafka tag filter,if you need, replace  tagIdValue
pigeon.business.tagId.key=pigeon
pigeon.business.tagId.value=com.seeing.pigeon


spring.kafka.bootstrap-servers=${pigeon.kafka.ip}:${pigeon.kafka.port}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.consumer.auto-commit-interval=1000
spring.kafka.consumer.enable-auto-commit=true

########################################## redis start ##########################################
spring.redis.host=${pigeon.redis.ip}
spring.redis.port=${pigeon.redis.port}
spring.redis.password=${pigeon.redis.password}
########################################## redis end ##########################################